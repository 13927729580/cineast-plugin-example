apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
}

sourceSets {
    main {
        resources {
            srcDir 'config'
        }
    }
}

configurations {
    provided
    compile.extendsFrom provided
}

dependencies {
    provided project(':cineast')
	compileOnly project(':cineast')
	//add additional dependencies here
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:all"
}

jar {
    from {
        (configurations.runtime - configurations.provided).collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveName = 'plugins.jar' //contains only the plugins from this project
}

task standalone(type: Jar, dependsOn: "jar") {
    manifest {
        attributes 'Main-Class': 'org.vitrivr.cineast.api.API'
    }

    from sourceSets.main.output
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    archiveName = 'standalone.jar' //contains cineast and the plugins
}

task run(type: JavaExec) {
  classpath sourceSets.main.runtimeClasspath
  main = "org.vitrivr.cineast.api.API"
  standardInput = System.in
  if (project.hasProperty("appArgs")) {
    args Eval.me(appArgs)
  }
}
